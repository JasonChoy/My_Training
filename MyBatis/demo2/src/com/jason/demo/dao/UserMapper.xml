<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 命名空间，作用就是对sql进行分类化管理,理解为sql隔离
 注意：使用mapper代理方法开发，namespace有特殊重要的作用
 -->

<mapper namespace="com.jason.demo.dao.UserMapper">

    <select id="findUserById" parameterType="int" resultType="com.jason.demo.domain.User">
        SELECT * FROM  user  WHERE id=#{value}
    </select>

    <select id="findUserByUserQueryVo" parameterType="com.jason.demo.vo.UserQueryVo" resultType="com.jason.demo.domain.User">
        SELECT * FROM  user  WHERE id=#{id} AND username=#{username}
    </select>

<!--    <select id="findUserByUserQueryVo" parameterType="java.util.Map" resultType="com.jason.demo.domain.User">
        SELECT * FROM  user  WHERE id=#{id}
        <if test="username != null">
            AND username=#{username}
        </if>
    </select>-->
</mapper>

<!--
        mapper接口方法参数只能有一个，系统是否不利于扩展维护?
        系统框架中，dao层的代码是被业务层公用的。即使mapper接口只有一个参数，可以使用包装类型的pojo满足不同的业务方法的需求
-->
