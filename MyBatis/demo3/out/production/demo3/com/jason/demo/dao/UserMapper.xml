<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 命名空间，作用就是对sql进行分类化管理,理解为sql隔离
 注意：使用mapper代理方法开发，namespace有特殊重要的作用
 -->

<mapper namespace="com.jason.demo.dao.UserMapper">
    <!-- 自定义resultMap
        将SELECT id id_,username username_ FROM USER 和User类中的属性作一个映射关系

        type：resultMap最终映射的java对象类型,可以使用别名
        id：对resultMap的唯一标识
         -->
    <resultMap type="userQueryVo" id="userResultMap">
        <!-- id表示查询结果集中唯一标识
        column：查询出来的列名
        property：type指定的pojo类型中的属性名
        最终resultMap对column和property作一个映射关系 （对应关系）
        -->
        <id column="id" property="voId"/>
        <!--
        result：对普通名映射定义
        column：查询出来的列名
        property：type指定的pojo类型中的属性名
        最终resultMap对column和property作一个映射关系 （对应关系）
         -->
        <result column="username" property="voUserName"/>

    </resultMap>

    <!-- 使用resultMap进行输出映射
            resultMap：指定定义的resultMap的id，如果这个resultMap在其它的mapper文件，前边需要加namespace
            -->
    <select id="findUserByIdResultMap" parameterType="int" resultMap="userResultMap">
        SELECT id ,username FROM USER WHERE id=#{value}
    </select>

<!--    关于动态Sql-->
<!--    自定义sql片段 提高重用率-->
    <sql id="my_sql_user">
        id,username,address
    </sql>

    <select id="findUserByCondition" parameterType="user" resultType="user">
        select
        <include refid="my_sql_user"/>
        from user
        <!--  where 可以自动去掉条件中的第一个and -->
        <where>
            <if test="id != null and id !=''">
              AND id=#{id}
            </if>
            <if test="sex != null and sex !=''">
                AND sex=#{sex}
            </if>
            <if test="username != null and username !=''">
                AND username=#{username}
            </if>
            <if test="birthday != null and birthday !=''">
                AND birthday=#{birthday}
            </if>
            <if test="address != null and address !=''">
                AND address=#{address}
            </if>
        </where>
    </select>

    <select id="findUserByForEach" parameterType="UserQueryVo" resultType="user">
        select * from user
        <where>
            <if test="ids != null">
                <foreach collection="ids" item="user_id" separator="," open="and id IN (" close=")">
                    #{user_id}
                </foreach>
            </if>
        </where>
    </select>

</mapper>


