解决组件不再依赖容器，我们使用了两种方案：服务定位器和控制反转。
       1、使用服务定位器查找组件，这是一种主动查找的行为。这种查找有一个缺点：组件需要知道如何查找资源。组件和容器依赖变成了组件和服务定位器的依赖。
       public class ServiceLocator {

           static{
               //该类加载的时候执行一次
               Container.init();
           }
           public static Object getDao(){
               return Container.getComponent("dao4Mysql");
       //      return Container.getComponent("dao4Oracle");
           }
       }



       2、然后，我们使用了控制反转，这是一种被动查找的行为。容器主动将资源推送给组件，组件则以一种合适的方式来接受资源。反转资源获取方向，这就是大名鼎鼎的Ioc（控制反转）。